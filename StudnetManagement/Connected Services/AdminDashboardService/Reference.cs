//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudnetManagement.AdminDashboardService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminDashboardService.IAdminDashboardService")]
    public interface IAdminDashboardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDashboardService/GetCountOfStudent", ReplyAction="http://tempuri.org/IAdminDashboardService/GetCountOfStudentResponse")]
        StudentManagement_Service.StudentData.CountData GetCountOfStudent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDashboardService/GetCountOfStudent", ReplyAction="http://tempuri.org/IAdminDashboardService/GetCountOfStudentResponse")]
        System.Threading.Tasks.Task<StudentManagement_Service.StudentData.CountData> GetCountOfStudentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDashboardService/GetDataFromUsertbl", ReplyAction="http://tempuri.org/IAdminDashboardService/GetDataFromUsertblResponse")]
        StudentManagement_Service.StudentData.CountData GetDataFromUsertbl(StudentManagement_Service.StudentData.StudentData studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDashboardService/GetDataFromUsertbl", ReplyAction="http://tempuri.org/IAdminDashboardService/GetDataFromUsertblResponse")]
        System.Threading.Tasks.Task<StudentManagement_Service.StudentData.CountData> GetDataFromUsertblAsync(StudentManagement_Service.StudentData.StudentData studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDashboardService/UpdateStudentStatus", ReplyAction="http://tempuri.org/IAdminDashboardService/UpdateStudentStatusResponse")]
        bool UpdateStudentStatus(StudentManagement_Service.StudentData.StudentData studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminDashboardService/UpdateStudentStatus", ReplyAction="http://tempuri.org/IAdminDashboardService/UpdateStudentStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateStudentStatusAsync(StudentManagement_Service.StudentData.StudentData studentData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminDashboardServiceChannel : StudnetManagement.AdminDashboardService.IAdminDashboardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminDashboardServiceClient : System.ServiceModel.ClientBase<StudnetManagement.AdminDashboardService.IAdminDashboardService>, StudnetManagement.AdminDashboardService.IAdminDashboardService {
        
        public AdminDashboardServiceClient() {
        }
        
        public AdminDashboardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminDashboardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminDashboardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminDashboardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StudentManagement_Service.StudentData.CountData GetCountOfStudent() {
            return base.Channel.GetCountOfStudent();
        }
        
        public System.Threading.Tasks.Task<StudentManagement_Service.StudentData.CountData> GetCountOfStudentAsync() {
            return base.Channel.GetCountOfStudentAsync();
        }
        
        public StudentManagement_Service.StudentData.CountData GetDataFromUsertbl(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.GetDataFromUsertbl(studentData);
        }
        
        public System.Threading.Tasks.Task<StudentManagement_Service.StudentData.CountData> GetDataFromUsertblAsync(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.GetDataFromUsertblAsync(studentData);
        }
        
        public bool UpdateStudentStatus(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.UpdateStudentStatus(studentData);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStudentStatusAsync(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.UpdateStudentStatusAsync(studentData);
        }
    }
}
