//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudnetManagement.StudentRegistrationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentRegistrationService.IStudentRegistrationService")]
    public interface IStudentRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRegistrationService/GetCountOfStudent", ReplyAction="http://tempuri.org/IStudentRegistrationService/GetCountOfStudentResponse")]
        bool GetCountOfStudent(StudentManagement_Service.StudentData.StudentData studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRegistrationService/GetCountOfStudent", ReplyAction="http://tempuri.org/IStudentRegistrationService/GetCountOfStudentResponse")]
        System.Threading.Tasks.Task<bool> GetCountOfStudentAsync(StudentManagement_Service.StudentData.StudentData studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRegistrationService/GetCoursesFromCoursestbl", ReplyAction="http://tempuri.org/IStudentRegistrationService/GetCoursesFromCoursestblResponse")]
        StudentManagement_Service.StudentData.CoursesData[] GetCoursesFromCoursestbl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRegistrationService/GetCoursesFromCoursestbl", ReplyAction="http://tempuri.org/IStudentRegistrationService/GetCoursesFromCoursestblResponse")]
        System.Threading.Tasks.Task<StudentManagement_Service.StudentData.CoursesData[]> GetCoursesFromCoursestblAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRegistrationService/InsertDataSelectedCoursestbl", ReplyAction="http://tempuri.org/IStudentRegistrationService/InsertDataSelectedCoursestblRespon" +
            "se")]
        bool InsertDataSelectedCoursestbl(StudentManagement_Service.StudentData.StudentData studentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentRegistrationService/InsertDataSelectedCoursestbl", ReplyAction="http://tempuri.org/IStudentRegistrationService/InsertDataSelectedCoursestblRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> InsertDataSelectedCoursestblAsync(StudentManagement_Service.StudentData.StudentData studentData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentRegistrationServiceChannel : StudnetManagement.StudentRegistrationService.IStudentRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentRegistrationServiceClient : System.ServiceModel.ClientBase<StudnetManagement.StudentRegistrationService.IStudentRegistrationService>, StudnetManagement.StudentRegistrationService.IStudentRegistrationService {
        
        public StudentRegistrationServiceClient() {
        }
        
        public StudentRegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentRegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentRegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentRegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetCountOfStudent(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.GetCountOfStudent(studentData);
        }
        
        public System.Threading.Tasks.Task<bool> GetCountOfStudentAsync(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.GetCountOfStudentAsync(studentData);
        }
        
        public StudentManagement_Service.StudentData.CoursesData[] GetCoursesFromCoursestbl() {
            return base.Channel.GetCoursesFromCoursestbl();
        }
        
        public System.Threading.Tasks.Task<StudentManagement_Service.StudentData.CoursesData[]> GetCoursesFromCoursestblAsync() {
            return base.Channel.GetCoursesFromCoursestblAsync();
        }
        
        public bool InsertDataSelectedCoursestbl(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.InsertDataSelectedCoursestbl(studentData);
        }
        
        public System.Threading.Tasks.Task<bool> InsertDataSelectedCoursestblAsync(StudentManagement_Service.StudentData.StudentData studentData) {
            return base.Channel.InsertDataSelectedCoursestblAsync(studentData);
        }
    }
}
